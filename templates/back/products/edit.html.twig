{% extends 'back/base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        /* Image preview styles */
        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 15px;
            gap: 15px;
        }
        .image-preview-item {
            position: relative;
            margin-right: 10px;
            margin-bottom: 10px;
            transition: all 0.3s ease;
        }
        .image-preview-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .image-preview-item .badge {
            position: absolute;
            top: 5px;
            right: 5px;
        }
        .image-item {
            display: inline-block;
            text-align: center;
            transition: all 0.3s ease;
        }
        .image-item:hover img {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .image-actions {
            text-align: left;
        }
        
        /* Color input styles */
        input[type="color"] {
            height: 38px;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        input[type="color"]:hover {
            transform: scale(1.05);
        }
        .color-preview {
            transition: all 0.3s ease;
        }
        .color-preview:hover {
            transform: scale(1.2);
        }
        
        /* Gradient buttons */
        .btn-gradient {
            background: linear-gradient(135deg, #007bff, #6610f2);
            border: none;
            color: white;
            transition: all 0.3s ease;
        }
        .btn-gradient:hover {
            background: linear-gradient(135deg, #0056b3, #520dc2);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            color: white;
        }
        
        /* Card hover effects */
        .card {
            transition: all 0.3s ease;
        }
        .card:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        /* Delete checkbox styles */
        .delete-image-checkbox:checked ~ label {
            font-weight: bold;
        }
        .image-item.marked-for-deletion img {
            opacity: 0.5;
            filter: grayscale(100%);
        }
    </style>
{% endblock %}

{% block title %}Modifier le produit{% endblock %}

{% block content %}
<div class="page-inner">
    <div class="page-header d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="page-title fw-bold">Modifier le produit</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ path('admin_dashboard') }}"><i class="fa fa-home mr-2"></i>Accueil</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('admin_products') }}">Produits</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Modifier</li>
                </ol>
            </nav>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            <div class="card border-0 shadow-sm rounded-3">
                <div class="card-header bg-light py-3">
                    <h5 class="mb-0 fw-bold"><i class="fa fa-edit mr-2 text-primary"></i>Modifier le produit: {{ product.name }}</h5>
                </div>
                <div class="card-body">
                    <form id="edit-product-form" action="{{ path('admin_products_edit', {'id': product.id}) }}" method="post" enctype="multipart/form-data" onsubmit="return false;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="name" class="form-label">Nom du produit <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-primary text-white"><i class="fa fa-tag"></i></span>
                                        <input type="text" class="form-control" id="name" name="name" value="{{ product.name }}" placeholder="Entrez le nom du produit" required>
                                    </div>
                                    <div class="invalid-feedback">Veuillez entrer un nom de produit.</div>
                                </div>
                                
                                <div class="form-group mb-3">
                                    <label for="description" class="form-label">Description <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-secondary text-white"><i class="fa fa-align-left"></i></span>
                                        <textarea class="form-control" id="description" name="description" rows="5" placeholder="Entrez la description du produit" maxlength="1000" required>{{ product.description }}</textarea>
                                    </div>
                                    <div class="invalid-feedback">La description est obligatoire.</div>
                                    <small class="text-muted character-count"><span id="char-count">0</span>/1000 caractères</small>
                                </div>
                                
                                <div class="form-group mb-3">
                                    <label for="price" class="form-label">Prix (TND) <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-success text-white"><i class="fa fa-dollar-sign"></i></span>
                                        <input type="number" step="0.01" min="0" class="form-control" id="price" name="price" value="{{ product.price }}" placeholder="Entrez le prix" required>
                                    </div>
                                    <div class="invalid-feedback">Le prix doit être supérieur à zéro.</div>
                                </div>
                                
                                <div class="form-group mb-3">
                                    <label for="stock" class="form-label">Quantité en stock <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-info text-white"><i class="fa fa-boxes"></i></span>
                                        <input type="number" min="0" class="form-control" id="stock" name="stock" value="{{ product.stock }}" placeholder="Entrez la quantité en stock" required>
                                    </div>
                                    <div class="invalid-feedback">La quantité en stock doit être un nombre positif.</div>
                                </div>
                                
                                <div class="form-group mb-3">
                                    <label for="category" class="form-label">Catégorie <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-warning text-white"><i class="fa fa-list"></i></span>
                                        <select class="form-control" id="category" name="category" required>
                                            <option value="">Sélectionnez une catégorie</option>
                                            <option value="women" {% if product.category == 'women' %}selected{% endif %}>Femmes</option>
                                            <option value="kids" {% if product.category == 'kids' %}selected{% endif %}>Enfant</option>
                                        </select>
                                    </div>
                                    <div class="invalid-feedback">Veuillez sélectionner une catégorie.</div>
                                </div>
                                
                                <style>
                                    /* Custom shipping styles */
                                    .border-3 { border-width: 3px !important; }
                                    .shipping-bg-element { font-size: 6rem; right: -10px; bottom: -25px; transform: rotate(-10deg); z-index: 0; }
                                    .opacity-10 { opacity: 0.1; }
                                    .text-lighter { color: #e9ecef; }
                                    .shipping-toggle-container { transition: all 0.3s ease; }
                                    .shipping-toggle-container:hover { box-shadow: 0 .125rem .25rem rgba(0,0,0,.075); }
                                    .shipping-price-container { transition: all 0.3s ease; }
                                    .custom-switch-lg .custom-control-label { padding-left: 6px; cursor: pointer; }
                                    .bg-gradient-primary { background: linear-gradient(45deg, #007bff, #00a5ff); }
                                </style>
                                
                                <div class="form-group mb-4">
                                    <label class="form-label">Couleurs du produit</label>
                                    
                                    {# Current colors #}
                                    <div class="current-colors mb-4 mt-3">
                                        <h6 class="fw-bold mb-3 d-flex align-items-center"><i class="fa fa-palette text-warning mr-2"></i> Couleurs actuelles</h6>
                                        <div class="card border-0 shadow-sm mb-3">
                                            <div class="card-body">
                                                <div id="existing-color-container">
                                                    {% if product.colors|length > 0 %}
                                                        {% for color in product.colors %}
                                                            <div class="row color-row mb-3 align-items-center animate__animated animate__fadeIn" id="color-row-{{ color.id }}">
                                                                <div class="col-md-1">
                                                                    <div class="color-preview" style="width: 25px; height: 25px; border-radius: 50%; background-color: {{ color.code }}; border: 1px solid #ddd;"></div>
                                                                </div>
                                                                <div class="col-md-5">
                                                                    <div class="input-group">
                                                                        <span class="input-group-text bg-light"><i class="fa fa-tag"></i></span>
                                                                        <input type="hidden" name="existing_color_ids[]" value="{{ color.id }}">
                                                                        <input type="text" class="form-control" name="existing_color_names[]" value="{{ color.name }}" placeholder="Nom de la couleur">
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-5">
                                                                    <div class="input-group">
                                                                        <span class="input-group-text bg-light"><i class="fa fa-fill-drip"></i></span>
                                                                        <input type="color" class="form-control" name="existing_color_codes[]" value="{{ color.code }}">
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-1 text-end">
                                                                    <button type="button" class="btn btn-outline-danger btn-sm rounded-circle shadow-sm remove-existing-color" data-id="{{ color.id }}" title="Supprimer cette couleur"><i class="fa fa-times"></i></button>
                                                                </div>
                                                            </div>
                                                        {% endfor %}
                                                    {% else %}
                                                        <div class="text-center py-4 text-muted bg-light rounded" id="no-colors-message">
                                                            <i class="fa fa-palette fa-3x mb-3 opacity-50"></i>
                                                            <p>Aucune couleur ajoutée.</p>
                                                        </div>
                                                    {% endif %}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    {# Add new colors #}
                                    <div class="add-new-colors mt-4">
                                        <h6 class="fw-bold mb-3 d-flex align-items-center"><i class="fa fa-plus-circle text-info mr-2"></i> Ajouter de nouvelles couleurs</h6>
                                        <div class="card border-0 shadow-sm">
                                            <div class="card-body">
                                                <div id="color-container">
                                                    <div class="row color-row mb-3 align-items-center animate__animated animate__fadeIn">
                                                        <div class="col-md-1">
                                                            <div class="color-preview new-color-preview" style="width: 25px; height: 25px; border-radius: 50%; border: 1px solid #ddd;"></div>
                                                        </div>
                                                        <div class="col-md-5">
                                                            <div class="input-group">
                                                                <span class="input-group-text bg-light"><i class="fa fa-tag"></i></span>
                                                                <input type="text" class="form-control new-color-name" name="color_names[]" placeholder="Nom de couleur (ex: Rouge)">
                                                            </div>
                                                        </div>
                                                        <div class="col-md-5">
                                                            <div class="input-group">
                                                                <span class="input-group-text bg-light"><i class="fa fa-fill-drip"></i></span>
                                                                <input type="color" class="form-control new-color-code" name="color_codes[]" value="#3366ff">
                                                            </div>
                                                        </div>
                                                        <div class="col-md-1 text-end">
                                                            <button type="button" class="btn btn-outline-danger btn-sm rounded-circle shadow-sm remove-color" title="Supprimer cette couleur"><i class="fa fa-times"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mt-3 text-center">
                                                    <button type="button" id="add-color" class="btn btn-outline-info btn-sm rounded-pill px-4 shadow-sm">
                                                        <i class="fa fa-plus mr-1"></i> Ajouter une autre couleur
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

<div class="form-group mb-4">
                                    <label for="shippingOptions" class="form-label h5 mb-3"><i class="fa fa-shipping-fast text-primary mr-2"></i>Options de livraison</label>
                                    <div class="shipping-options-container">
                                        <div class="row no-gutters">
                                            <div class="col-md-12">
                                                <div class="shipping-toggle-container mb-3 p-3 rounded bg-light border-left border-primary border-3 position-relative overflow-hidden">
                                                    <!-- Design elements -->
                                                    <div class="position-absolute shipping-bg-element"><i class="fa fa-truck-loading opacity-10 text-lighter"></i></div>
                                                    
                                                    <!-- Free shipping toggle -->
                                                    <div class="custom-control custom-switch custom-switch-lg">
                                                        <input type="checkbox" class="custom-control-input" id="freeShipping" name="freeShipping" {% if product.freeShipping %}checked{% endif %} onchange="toggleShippingPrice()">
                                                        <label class="custom-control-label h5 mb-0" for="freeShipping">Livraison gratuite</label>
                                                    </div>
                                                    <p class="text-muted mb-0 mt-2">L'option livraison gratuite attirera plus de clients et augmentera le taux de conversion.</p>
                                                </div>
                                            </div>

                                            <!-- Shipping price section with animated transition -->
                                            <div class="col-md-12">
                                                <div id="shippingPriceGroup" class="shipping-price-container p-3 border rounded{% if product.freeShipping %} d-none{% endif %}" data-animation="fade-in-up">
                                                    <div class="mb-3">
                                                        <label for="shippingPrice" class="form-label font-weight-bold">Prix de livraison</label>
                                                        <div class="input-group input-group-lg shadow-sm">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text bg-gradient-primary text-white border-0"><i class="fa fa-money-bill-wave"></i></span>
                                                            </div>
                                                            <input type="number" class="form-control form-control-lg border-0 shadow-none" id="shippingPrice" name="shippingPrice" placeholder="Ex: 7.99" step="0.01" min="0" value="{{ product.shippingPrice }}">
                                                            <div class="input-group-append">
                                                                <span class="input-group-text bg-light border-0">TND</span>
                                                            </div>
                                                        </div>
                                                        <small class="form-text text-muted mt-2">
                                                            <i class="fa fa-info-circle mr-1"></i> Ce coût sera ajouté automatiquement au total de la commande client
                                                        </small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            
                            <div class="col-md-6">

                                
                                <div class="form-group mb-4">
                                    <label for="images" class="form-label">Images du produit <span class="text-danger">*</span></label>
                                    
                                    {# Current images #}
                                    <div class="current-images mb-3 mt-3">
                                        <h6 class="fw-bold mb-3 d-flex align-items-center"><i class="fa fa-images text-primary mr-2"></i> Images actuelles</h6>
                                        <div class="d-flex flex-wrap" id="current-images-container">
                                            {% if product.images|length > 0 %}
                                                {% for image in product.images %}
                                                    <div class="image-item position-relative m-2 animate__animated animate__fadeIn" id="img-container-{{ image.id }}">
                                                        <div class="card border-0 shadow-sm h-100">
                                                            <div class="position-relative">
                                                                <img src="{{ asset('uploads/products/' ~ image.imagePath) }}" alt="{{ product.name }}" class="card-img-top" width="150" height="150" style="object-fit: cover;">
                                                                {% if image.isPrimary %}
                                                                    <span class="badge bg-success position-absolute top-0 end-0 m-2">Principale</span>
                                                                {% endif %}
                                                            </div>
                                                            <div class="card-body p-2">
                                                                <div class="form-check mb-2">
                                                                    <input type="radio" id="primary_{{ image.id }}" name="primary_image" value="{{ image.id }}" class="form-check-input" {% if image.isPrimary %}checked{% endif %}>
                                                                    <label class="form-check-label" for="primary_{{ image.id }}">Image principale</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input type="checkbox" id="delete_{{ image.id }}" name="delete_images[]" value="{{ image.id }}" class="form-check-input delete-image-checkbox">
                                                                    <label class="form-check-label text-danger" for="delete_{{ image.id }}">Supprimer</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                {% endfor %}
                                            {% else %}
                                                <div class="text-center w-100 py-4 text-muted bg-light rounded">
                                                    <i class="fa fa-image fa-3x mb-3 opacity-50"></i>
                                                    <p>Aucune image téléversée.</p>
                                                </div>
                                            {% endif %}
                                        </div>
                                    </div>
                                    
                                    {# Add new images #}
                                    <div class="add-new-images mt-4 mb-4">
                                        <h6 class="fw-bold mb-3 d-flex align-items-center"><i class="fa fa-plus-circle text-success mr-2"></i> Ajouter de nouvelles images</h6>
                                        <div class="card border-0 shadow-sm">
                                            <div class="card-body">
                                                <div class="image-preview-container" id="image-previews">
                                                    <div class="image-preview-item text-center p-3">
                                                        <img class="img-upload-preview mb-2" width="120" height="120" src="{{ asset('back/assets/img/placeholder.svg') }}" alt="preview" style="object-fit: contain;">
                                                        <p class="mb-0 text-muted">Aperçu des images</p>
                                                    </div>
                                                </div>
                                                <div class="mt-3">
                                                    <input type="file" class="form-control form-control-file d-none" id="images" name="images[]" accept="image/*" multiple>
                                                    <label for="images" class="btn btn-primary btn-gradient rounded-pill shadow-sm w-100">
                                                        <i class="fa fa-cloud-upload-alt mr-2"></i> Sélectionner des images
                                                    </label>
                                                    <small class="form-text text-muted mt-2">
                                                        <i class="fa fa-info-circle mr-1"></i> Formats acceptés: JPG, PNG, GIF. Taille max: 5MB.
                                                        <br>Vous pouvez sélectionner plusieurs images à la fois.
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <hr class="mt-4">
                        <div class="card-action">
                            <div id="form-errors" class="alert alert-danger d-none mb-3 animate__animated animate__fadeIn">
                                <div class="d-flex">
                                    <div class="mr-3">
                                        <i class="fa fa-exclamation-triangle fa-2x text-danger"></i>
                                    </div>
                                    <div>
                                        <h5 class="mb-1">Erreur de validation</h5>
                                        <p class="mb-0">Veuillez corriger les erreurs ci-dessous avant de soumettre le formulaire.</p>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 text-center text-md-left mb-3 mb-md-0">
                                    <a href="{{ path('admin_products') }}" class="btn btn-outline-danger btn-rounded px-4">
                                        <i class="fa fa-arrow-left mr-2"></i> Annuler et retourner aux produits
                                    </a>
                                </div>
                                <div class="col-md-6 text-center text-md-right">
                                    <button type="submit" id="submit-btn" class="btn btn-success btn-lg btn-rounded shadow px-5">
                                        <i class="fa fa-save mr-2"></i> Mettre à jour le produit
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script>
        $(document).ready(function() {
            // Character counter for description
            const updateCharCount = () => {
                const maxLength = $('#description').attr('maxlength');
                const currentLength = $('#description').val().length;
                $('#char-count').text(currentLength);
                
                // Change color when approaching limit
                if (currentLength > maxLength * 0.8) {
                    $('#char-count').removeClass('text-muted').addClass('text-danger');
                } else {
                    $('#char-count').removeClass('text-danger').addClass('text-muted');
                }
                
                // Add appropriate validation classes
                if (currentLength > 0) {
                    $('#description').removeClass('is-invalid').addClass('is-valid');
                } else {
                    $('#description').removeClass('is-valid').addClass('is-invalid');
                }
            };
            
            // Initialize character counter
            updateCharCount();
            $('#description').on('input', updateCharCount);
            
            // Enhanced Image Preview and Management
            $('#images').change(function() {
                const placeholder = `<div class="image-preview-item text-center p-3"><img class="img-upload-preview mb-2" width="120" height="120" src="{{ asset('back/assets/img/placeholder.svg') }}" alt="preview" style="object-fit: contain;"><p class="mb-0 text-muted">Aperçu des images</p></div>`;
                $('#image-previews').empty();
                
                const files = Array.from(this.files);
                if (files.length === 0) {
                    $('#image-previews').html(placeholder);
                    return;
                }
                
                // Process each file with a slight delay for animation effect
                files.forEach((file, index) => {
                    let reader = new FileReader();
                    reader.onload = (e) => {
                        setTimeout(() => {
                            $('#image-previews').append(`
                                <div class="image-preview-item animate__animated animate__fadeIn">
                                    <div class="card border-0 shadow-sm h-100">
                                        <img class="card-img-top" width="120" height="120" src="${e.target.result}" alt="preview" style="object-fit: cover;">
                                        <div class="card-footer bg-light text-center p-1">
                                            <small class="text-muted">${file.name.length > 15 ? file.name.substring(0, 12) + '...' : file.name}</small>
                                        </div>
                                    </div>
                                </div>
                            `);
                        }, index * 100);
                    };
                    reader.readAsDataURL(file);
                });
            });
            
            // Visual effect for images marked for deletion
            $(document).on('change', '.delete-image-checkbox', function() {
                const container = $(this).closest('.image-item');
                if ($(this).is(':checked')) {
                    container.addClass('marked-for-deletion animate__animated animate__pulse');
                    $('img', container).css('opacity', '0.5');
                } else {
                    container.removeClass('marked-for-deletion animate__animated animate__pulse');
                    $('img', container).css('opacity', '1');
                }
            });
            
            // Enhanced color management with live preview
            // Initialize color previews
            function updateColorPreviews() {
                $('.new-color-code').each(function() {
                    const preview = $(this).closest('.color-row').find('.new-color-preview');
                    preview.css('background-color', $(this).val());
                });
            }
            
            // Run on page load
            updateColorPreviews();
            
            // Update color preview when color input changes
            $(document).on('input', '.new-color-code', function() {
                const preview = $(this).closest('.color-row').find('.new-color-preview');
                preview.css('background-color', $(this).val());
                // Add a quick pulse animation when color changes
                preview.addClass('animate__animated animate__pulse');
                setTimeout(() => {
                    preview.removeClass('animate__animated animate__pulse');
                }, 500);
            });
            
            // Handle adding new colors with animation
            $('#add-color').click(function() {
                const colorRow = `
                    <div class="row color-row mb-3 align-items-center animate__animated animate__fadeIn">
                        <div class="col-md-1">
                            <div class="color-preview new-color-preview" style="width: 25px; height: 25px; border-radius: 50%; border: 1px solid #ddd; background-color: #3366ff;"></div>
                        </div>
                        <div class="col-md-5">
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fa fa-tag"></i></span>
                                <input type="text" class="form-control new-color-name" name="color_names[]" placeholder="Nom de couleur (ex: Bleu)">
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fa fa-fill-drip"></i></span>
                                <input type="color" class="form-control new-color-code" name="color_codes[]" value="#3366ff">
                            </div>
                        </div>
                        <div class="col-md-1 text-end">
                            <button type="button" class="btn btn-outline-danger btn-sm rounded-circle shadow-sm remove-color" title="Supprimer cette couleur"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                `;
                
                $('#color-container').append(colorRow);
                // Animate scroll to new color row
                $('html, body').animate({
                    scrollTop: $('#color-container .color-row:last').offset().top - 100
                }, 500);
            });
            
            // Remove new color row with fade out animation
            $(document).on('click', '.remove-color', function() {
                const row = $(this).closest('.color-row');
                row.addClass('animate__animated animate__fadeOut');
                setTimeout(() => {
                    row.remove();
                }, 500);
            });
            
            // Remove existing color row with animation
            $(document).on('click', '.remove-existing-color', function() {
                const colorId = $(this).data('id');
                const row = $(this).closest('.color-row');
                
                // Fade out animation
                row.addClass('animate__animated animate__fadeOut');
                setTimeout(() => {
                    row.remove();
                    // Add hidden input to mark color for deletion
                    $('form').append(`<input type="hidden" name="delete_colors[]" value="${colorId}">`);
                    
                    // Check if all colors are removed
                    if ($('#existing-color-container .color-row').length === 0) {
                        $('#existing-color-container').html(`
                            <div class="text-center py-4 text-muted bg-light rounded animate__animated animate__fadeIn" id="no-colors-message">
                                <i class="fa fa-palette fa-3x mb-3 opacity-50"></i>
                                <p>Aucune couleur ajoutée.</p>
                            </div>
                        `);
                    }
                }, 500);
            });
            
            // Form validation and submission with AJAX
            $('form').on('submit', function(e) {
                e.preventDefault();
                
                // Form validation function
                function validateForm() {
                    let isValid = true;
                    
                    // Clear previous validation
                    $('.is-invalid').removeClass('is-invalid');
                    $('.is-valid').removeClass('is-valid');
                    $('.invalid-feedback').remove();
                    
                    // Validate name
                    if ($('#name').val().trim() === '') {
                        $('#name').addClass('is-invalid');
                        $('#name').after('<div class="invalid-feedback">Le nom du produit est requis</div>');
                        isValid = false;
                    } else {
                        $('#name').addClass('is-valid');
                    }
                    
                    // Validate price
                    const price = $('#price').val().trim();
                    if (price === '' || isNaN(price) || parseFloat(price) <= 0) {
                        $('#price').addClass('is-invalid');
                        $('#price').after('<div class="invalid-feedback">Le prix doit être un nombre positif</div>');
                        isValid = false;
                    } else {
                        $('#price').addClass('is-valid');
                    }
                    
                    // Validate stock
                    const stock = $('#stock').val().trim();
                    if (stock === '' || isNaN(stock) || parseInt(stock) < 0) {
                        $('#stock').addClass('is-invalid');
                        $('#stock').after('<div class="invalid-feedback">Le stock doit être un nombre positif ou zéro</div>');
                        isValid = false;
                    } else {
                        $('#stock').addClass('is-valid');
                    }
                    
                    // Validate description (optional but check if not too short)
                    const description = $('#description').val().trim();
                    if (description.length > 0 && description.length < 10) {
                        $('#description').addClass('is-invalid');
                        $('#description').after('<div class="invalid-feedback">La description doit contenir au moins 10 caractères</div>');
                        isValid = false;
                    } else if (description.length >= 10) {
                        $('#description').addClass('is-valid');
                    }
                    
                    // Validate image count
                    const deleteImagesCount = $('input[name="delete_images[]"]:checked').length;
                    const totalImages = {{ product.images|length }} + $('#images')[0].files.length - deleteImagesCount;
                    
                    if (totalImages < 1) {
                        isValid = false;
                        Swal.fire({
                            title: 'Erreur!',
                            text: 'Le produit doit avoir au moins une image. Veuillez ajouter au moins une image.',
                            icon: 'error',
                            confirmButtonColor: '#d33'
                        });
                        return false;
                    }
                    
                    return isValid;
                }
                
                // Run validation
                if (!validateForm()) {
                    return false;
                }
                
                // Check if images are being deleted
                const imagesToDelete = $('.delete-image-checkbox:checked').length;
                if (imagesToDelete > 0) {
                    // Use SweetAlert2 for deletion confirmation
                    Swal.fire({
                        title: 'Confirmation',
                        text: `Vous allez supprimer ${imagesToDelete} image(s). Confirmez-vous cette action ?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Oui, supprimer',
                        cancelButtonText: 'Annuler',
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            submitFormWithAjax();
                        }
                    });
                } else {
                    submitFormWithAjax();
                }
                
                // AJAX form submission function
                function submitFormWithAjax() {
                    // Show loading spinner
                    Swal.fire({
                        title: 'En cours...',
                        text: 'Mise à jour du produit',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    
                    // Create FormData object for file uploads
                    const formData = new FormData($('#edit-product-form')[0]);
                    
                    // Ensure we include the CSRF token
                    if ($('input[name="_token"]').length === 0) {
                        formData.append('_token', '{{ csrf_token("edit" ~ product.id) }}'); 
                    }
                    
                    // Log form data for debugging
                    console.log('Form submission data:');
                    for (let pair of formData.entries()) {
                        console.log(pair[0] + ': ' + pair[1]);
                    }
                    
                    // Submit form via AJAX
                    $.ajax({
                        url: $('#edit-product-form').attr('action'),
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        success: function(response) {
                            if (response.success) {
                                // Show success message with SweetAlert2
                                Swal.fire({
                                    title: 'Succès!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonColor: '#28a745',
                                    showCancelButton: true,
                                    confirmButtonText: 'Retour à la liste',
                                    cancelButtonText: 'Continuer l\'édition',
                                    reverseButtons: true
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // Redirect to products list
                                        window.location.href = '{{ path('admin_products') }}';
                                    }
                                });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Erreur!',
                            text: 'Une erreur est survenue lors de la mise à jour du produit.',
                            icon: 'error',
                            confirmButtonColor: '#d33'
                        });
                    }
                });
            }
            });
            
            // Add validation on input change
            $('#edit-product-form input[required], #edit-product-form textarea[required], #edit-product-form select[required]').on('change input', function() {
                if ($(this).val() === '' || $(this).val() === null) {
                    $(this).addClass('is-invalid');
                    $(this).removeClass('is-valid');
                } else {
                    $(this).removeClass('is-invalid');
                    $(this).addClass('is-valid');
                }
            });
            
            // Initialize shipping price toggle
            toggleShippingPrice();
        });
        
        // Function to toggle shipping price field based on free shipping checkbox
        function toggleShippingPrice() {
            var freeShipping = $('#freeShipping').is(':checked');
            var $priceGroup = $('#shippingPriceGroup');
            
            if (freeShipping) {
                // Hide with animation
                $priceGroup.slideUp(300, function() {
                    $priceGroup.addClass('d-none');
                });
                $('#shippingPrice').removeAttr('required');
            } else {
                // Show with animation
                $priceGroup.removeClass('d-none');
                $priceGroup.hide().slideDown(300);
                $('#shippingPrice').attr('required', 'required');
            }
        }
    </script>
{% endblock %}
